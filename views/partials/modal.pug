//- partials/modal.pug
.modal#modal
    .container
        button.close-btn(onclick="closeModal()") ✖
        .form-container#login-form.active
            h2 Авторизація
            form(action="/users/login", method="POST" id="login-user-form")
                input(type="text", name="login", placeholder="Логін", required)
                input(type="password", name="password", placeholder="Пароль", required)
                button.login-submit-btn(type="submit") Увійти
            button.toggle-btn(onclick="toggleForms()") Немає облікового запису? Зареєструватися
        .form-container#register-form
            h2 Реєстрація
            form(action="/users/register" method="POST" id="register-user-form")
                input#name_surname(type="text" name="name_surname" placeholder="Введіть ім'я та прізвище" required)
                input#login(type="text" name="login" placeholder="Введіть логін" required)
                input#email(type="email" name="email" placeholder="Введіть email" required)
                input#phone(type="text" name="phone" placeholder="Введіть номер телефону" required)
                input#password(type="password" name="password" placeholder="Введіть пароль" required)
                input#confirmPassword(type="password" name="confirmPassword" placeholder="Повторіть пароль" required)
                button.register-submit-btn(type="submit") Зареєструватись
            button.toggle-btn(onclick="toggleForms()") Вже маєте обліковий запис? Увійти

    script.
        document.getElementById('login-user-form').addEventListener('submit', async (event) => {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            const requestData = {};
            formData.forEach((value, key) => {
                requestData[key] = value;
            });

            try {
                const response = await fetch(form.action, {
                    method: form.method,
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(requestData),
                });

                const result = await response.json();
                if (result.success) {
                    window.location.href = result.redirectUrl;
                } else {
                    alert(`Помилка: ${result.message}`);
                }
            } catch (error) {
                alert('Сталася помилка при з’єднанні з сервером.');
                console.error('Error:', error);
            }
        });
        document.getElementById('register-user-form').addEventListener('submit', async (event) => {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            const requestData = {};
            formData.forEach((value, key) => {
                requestData[key] = value;
            });

            try {
                const response = await fetch(form.action, {
                    method: form.method,
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(requestData),
                });

                const result = await response.json();
                if (result.success) {
                    alert('Користувача успішно створено!');
                    window.location.href = result.redirectUrl;
                } else {
                    alert(`Помилка: ${result.message}`); // Виводимо текст помилки
                }
            } catch (error) {
                alert('Сталася помилка при з’єднанні з сервером.');
                console.error('Error:', error);
            }
        });
